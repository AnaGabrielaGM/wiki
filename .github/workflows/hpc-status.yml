name: Check HPC Status
on: [push, pull_request]
  #schedule:
  #  - cron:  '*/59 7 * * *'
  #  - cron:  '*/59 8 * * *'
  #  - cron:  '*/59 9 * * *'
  #  - cron:  '*/59 10 * * *'
  #  - cron:  '*/59 11 * * *'
  #  - cron:  '*/59 12 * * *'
  #  - cron:  '*/59 1 * * *'
  #  - cron:  '*/59 2 * * *'
  #  - cron:  '*/59 3 * * *'
  #  - cron:  '*/59 4 * * *'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Set constants
      run: |
        hour=$(date +%H)
        cutoff=60.00
    - name: SSH Remote Commands
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script_stop: true
        script: sar -s "${hour}:00:00" -u > cpu-usage.txt
    - name: Get idle cpu percent
      run: |
        array=$(grep '^Average' cpu-usage.txt)
        split_arr=($array)
        percent=${split_arr[${#split_arr[@]}-1]}
    - uses: actions/checkout@v2
    - name: Update markdown image based on HPC status 
      #with:
      #    ref: ${{ env.DELAYED_JOB_CHECKOUT_REF }}
      run: |
        if (( $(echo "$percent < $cutoff" |bc -l) ))
        then
          echo "Less than cutoff, updating."
          sed -i 's/HPC login node at normal usage./HPC login node idle CPU-time is less than 60%. Expect slowness./' docs/hpc/status.md
          sed -i 's/green/red/' docs/hpc/status.md
        else
          echo "Normal usage, updating."
          sed -i 's/HPC login naode idle CPU-time is less than 60%. Expect slowness./HPC login node at normal usage./' docs/hpc/status.md
          sed -i 's/red/green/' docs/hpc/status.md
        fi
    - name: Commit and push changes
      run: |
        git config --global user.name "F-said"
        git config --global user.email "f.saidmuratov@yahoo.com"

        git add docs/hpc/status.md
        git commit -m "Updated hpc status"
        git push
    #- name: Remove scheduled job
    #    uses: cardinalby/unschedule-job-action@v1
    #    with:
    #      ghToken: ${{ secrets.WORKFLOWS_TOKEN }} 


